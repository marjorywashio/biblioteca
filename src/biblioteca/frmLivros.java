package biblioteca;

import java.sql.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Vector;
import biblioteca.LivrosDAO;
import java.awt.HeadlessException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;

public class frmLivros extends javax.swing.JFrame {

    private GeneroDAO generoDAO;

    public frmLivros() {
        initComponents();
        this.setLocationRelativeTo(null);
        generoDAO = new GeneroDAO(); // Instanciando GeneroDAO
        preencherComboGenero(); // Preenchendo o combo de gênero
        btnListarActionPerformed(null);
        btnLimpar.setVisible(false);

    }

    private void preencherComboGenero() {
        try {
            // Obtendo a lista de gêneros do GeneroDAO
            ArrayList<GeneroDTO> listaGeneros = generoDAO.listarGeneros();

            // Criando um modelo para o combo de gênero
            DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();

            model.addElement("Selecionar gênero");

            // Adicionando os nomes dos gêneros ao modelo do combo
            for (GeneroDTO genero : listaGeneros) {
                model.addElement(genero.getNome());
            }

            // Definindo o modelo no combo de gênero
            cmbGenero.setModel(model);
        } catch (Exception e) {
            // Tratamento de exceção
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JButton();
        txtEditora = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblLivros = new javax.swing.JTable();
        btnListar = new javax.swing.JButton();
        txtTitulo = new javax.swing.JTextField();
        txtAutor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbGenero = new javax.swing.JComboBox<>();
        btnCancelar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        btnExcluir = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();

        jLabel1.setBackground(new java.awt.Color(153, 32, 218));
        jLabel1.setFont(new java.awt.Font("French Script MT", 0, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 46, 29));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Livro");
        jLabel1.setAlignmentY(0.0F);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 255, 204));

        jLabel3.setFont(new java.awt.Font("Poppins Light", 0, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 46, 29));
        jLabel3.setText("Título");
        jLabel3.setAlignmentY(0.0F);

        btnSalvar.setBackground(new java.awt.Color(0, 102, 51));
        btnSalvar.setFont(new java.awt.Font("Poppins Light", 0, 13)); // NOI18N
        btnSalvar.setForeground(new java.awt.Color(255, 255, 255));
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        txtEditora.setFont(new java.awt.Font("Poppins Light", 0, 13)); // NOI18N
        txtEditora.setForeground(new java.awt.Color(51, 46, 29));

        jLabel6.setFont(new java.awt.Font("Poppins Light", 0, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 46, 29));
        jLabel6.setText("Editora");
        jLabel6.setAlignmentY(0.0F);

        tblLivros.setFont(new java.awt.Font("Poppins Light", 0, 14)); // NOI18N
        tblLivros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Título", "Autor", "Editora", "Gênero"
            }
        ));
        tblLivros.setShowGrid(false);
        tblLivros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLivrosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblLivros);

        btnListar.setBackground(new java.awt.Color(51, 51, 51));
        btnListar.setFont(new java.awt.Font("Poppins Light", 0, 13)); // NOI18N
        btnListar.setForeground(new java.awt.Color(255, 255, 255));
        btnListar.setText("Listar");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        txtTitulo.setFont(new java.awt.Font("Poppins Light", 0, 13)); // NOI18N
        txtTitulo.setForeground(new java.awt.Color(51, 46, 29));

        txtAutor.setFont(new java.awt.Font("Poppins Light", 0, 13)); // NOI18N
        txtAutor.setForeground(new java.awt.Color(51, 46, 29));

        jLabel4.setFont(new java.awt.Font("Poppins Light", 0, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 46, 29));
        jLabel4.setText("Autor");
        jLabel4.setAlignmentY(0.0F);

        jLabel5.setFont(new java.awt.Font("Poppins Light", 0, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 46, 29));
        jLabel5.setText("Gênero");
        jLabel5.setAlignmentY(0.0F);

        cmbGenero.setFont(new java.awt.Font("Poppins Light", 0, 13)); // NOI18N
        cmbGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbGenero.setSelectedItem(cmbGenero);
        cmbGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGeneroActionPerformed(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(51, 51, 51));
        btnCancelar.setFont(new java.awt.Font("Poppins Light", 0, 13)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));

        jLabel7.setFont(new java.awt.Font("Vivaldi", 0, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 46, 29));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Livros");
        jLabel7.setToolTipText("");
        jLabel7.setAlignmentY(0.0F);
        jLabel7.setAutoscrolls(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(257, 257, 257)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel7))
        );

        btnExcluir.setBackground(new java.awt.Color(255, 51, 51));
        btnExcluir.setFont(new java.awt.Font("Poppins Light", 0, 13)); // NOI18N
        btnExcluir.setForeground(new java.awt.Color(255, 255, 255));
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnLimpar.setBackground(new java.awt.Color(51, 51, 51));
        btnLimpar.setFont(new java.awt.Font("Poppins Light", 0, 13)); // NOI18N
        btnLimpar.setForeground(new java.awt.Color(255, 255, 255));
        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnListar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtEditora, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtEditora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluir)
                    .addComponent(btnSalvar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnLimpar)
                    .addComponent(btnListar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        try {
            // Obtém os dados do livro dos campos de texto
            String titulo = txtTitulo.getText();
            String autor = txtAutor.getText();
            String editora = txtEditora.getText();

            GeneroDAO generodao = new GeneroDAO();
            String nome_genero = cmbGenero.getSelectedItem().toString();
            int id_genero = generodao.obterIdGeneroPorNome(nome_genero);

            // Verifica se um livro está selecionado na tabela
            int selectedRow = tblLivros.getSelectedRow();
            if (selectedRow != -1) {
                // Se um livro estiver selecionado, atualiza o livro existente

                // Obtém o ID do livro selecionado na tabela
                DefaultTableModel model = (DefaultTableModel) tblLivros.getModel();
                var nome_livro = model.getValueAt(selectedRow, 0);
                LivrosDAO livrosdao = new LivrosDAO();
                int id_livro = livrosdao.obterIdLivroPorNome(nome_livro.toString());

                // Cria um objeto LivroDTO com o ID do livro e os novos dados
                LivrosDTO livroDTO = new LivrosDTO();
                livroDTO.setId_livro(id_livro);
                livroDTO.setTitulo_livro(titulo);
                livroDTO.setAutor_livro(autor);
                livroDTO.setEditora_livro(editora);
                livroDTO.setId_genero(id_genero);

                // Instancia o objeto LivroDAO para realizar a atualização no banco de dados
                LivrosDAO livroDAO = new LivrosDAO();
                livroDAO.atualizarLivro(livroDTO);

                // Atualiza a tabela com os novos dados
                btnListarActionPerformed(evt);

                // Limpa os campos
                btnLimparActionPerformed(evt);

                JOptionPane.showMessageDialog(this, "Livro atualizado", "Informação", JOptionPane.INFORMATION_MESSAGE);
            } else {
                // Se nenhum livro estiver selecionado, cadastra um novo livro

                // Cria um objeto LivroDTO com os dados do novo livro
                LivrosDTO livroDTO = new LivrosDTO();
                livroDTO.setTitulo_livro(titulo);
                livroDTO.setAutor_livro(autor);
                livroDTO.setEditora_livro(editora);
                livroDTO.setId_genero(id_genero);

                // Instancia o objeto LivroDAO para cadastrar o novo livro no banco de dados
                LivrosDAO livroDAO = new LivrosDAO();
                livroDAO.cadastrarLivro(livroDTO);

                // Atualiza a tabela com os novos dados
                btnListarActionPerformed(evt);

                // Limpa os campos
                btnLimparActionPerformed(evt);

                JOptionPane.showMessageDialog(this, "Livro salvo", "Informação", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            // Trate quaisquer exceções aqui
            e.printStackTrace();
        }


    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        // TODO add your handling code here:
        try {
            LivrosDAO objLivrosDAO = new LivrosDAO();
            GeneroDAO generoDAO = new GeneroDAO();

            DefaultTableModel model = (DefaultTableModel) tblLivros.getModel();
            model.setNumRows(0);
            ArrayList<LivrosDTO> lista = objLivrosDAO.ListarLivros();

            for (int num = 0; num < lista.size(); num++) {
                LivrosDTO livro = lista.get(num);
                String nomeGenero = generoDAO.obterNomeGeneroPorId(livro.getId_genero());

                model.addRow(new Object[]{
                    lista.get(num).getTitulo_livro(),
                    lista.get(num).getAutor_livro(),
                    lista.get(num).getEditora_livro(),
                    nomeGenero});
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnListarActionPerformed


    private void cmbGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGeneroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbGeneroActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        frmBiblioteca bibliotecaForm = new frmBiblioteca();
        bibliotecaForm.setVisible(true);
        this.dispose(); // Fecha o formulário atual
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        try {
            // Obtém os dados do livro dos campos de texto
            String titulo = txtTitulo.getText();
            String autor = txtAutor.getText();
            String editora = txtEditora.getText();

            GeneroDAO generodao = new GeneroDAO();
            String nome_genero = cmbGenero.getSelectedItem().toString();
            int id_genero = generodao.obterIdGeneroPorNome(nome_genero);

            // Verifica se um livro está selecionado na tabela
            int selectedRow = tblLivros.getSelectedRow();
            if (selectedRow != -1) {
                // Se um livro estiver selecionado, exclui o livro existente

                // Obtém o ID do livro selecionado na tabela
                DefaultTableModel model = (DefaultTableModel) tblLivros.getModel();
                var nome_livro = model.getValueAt(selectedRow, 0);
                LivrosDAO livrosdao = new LivrosDAO();
                int id_livro = livrosdao.obterIdLivroPorNome(nome_livro.toString());

                // Pede confirmação ao usuário antes de excluir a pessoa
                int confirmacao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir o livro '" + nome_livro + "'?", "Confirmação de Exclusão", JOptionPane.YES_NO_OPTION);
                if (confirmacao == JOptionPane.YES_OPTION) {

                    // Cria um objeto LivroDTO com o ID do livro e os novos dados
                    LivrosDTO livroDTO = new LivrosDTO();
                    livroDTO.setId_livro(id_livro);
                    livroDTO.setTitulo_livro(titulo);
                    livroDTO.setAutor_livro(autor);
                    livroDTO.setEditora_livro(editora);
                    livroDTO.setId_genero(id_genero);

                    // Verifica se o livro está cadastrado em um empréstimo
                    EmprestimoDAO emprestimoDAO = new EmprestimoDAO();
                    if (emprestimoDAO.livroCadastradoEmEmprestimo(id_livro)) {
                        JOptionPane.showMessageDialog(this, "O livro selecionado está cadastrado em um empréstimo e não pode ser excluído.", "Aviso", JOptionPane.WARNING_MESSAGE);
                        return; // Sai do método sem excluir o livro
                    }

                    // Instancia o objeto LivroDAO para realizar a atualização no banco de dados
                    LivrosDAO livroDAO = new LivrosDAO();
                    livroDAO.ExcluirLivro(livroDTO);

                    // Atualiza a tabela com os novos dados
                    btnListarActionPerformed(evt);

                    // Limpa os campos
                    btnLimparActionPerformed(evt);

                    JOptionPane.showMessageDialog(this, "Livro excluído", "Informação", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                // Se nenhum livro estiver selecionado, solicita selecionar um livro
                JOptionPane.showMessageDialog(this, "Selecione um livro para excluir", "Informação", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (HeadlessException | SQLException e) {
            // Trate quaisquer exceções aqui
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void tblLivrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLivrosMouseClicked
        int selectedRow = tblLivros.getSelectedRow();
        if (selectedRow != -1) {
            DefaultTableModel model = (DefaultTableModel) tblLivros.getModel();

            // Preenche os campos de texto com os dados do livro selecionado
            txtTitulo.setText((String) model.getValueAt(selectedRow, 0)); // Coluna do título
            txtAutor.setText((String) model.getValueAt(selectedRow, 1)); // Coluna do autor
            txtEditora.setText((String) model.getValueAt(selectedRow, 2)); // Coluna da editora

            // Preenche a combobox com o gênero do livro selecionado
            String genero = (String) model.getValueAt(selectedRow, 3); // Coluna do gênero
            cmbGenero.setSelectedItem(genero);
        }

    }//GEN-LAST:event_tblLivrosMouseClicked

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        txtTitulo.setText("");
        txtAutor.setText("");
        txtEditora.setText("");
        cmbGenero.setSelectedItem("Escolha um gênero");
        txtTitulo.requestFocus();
    }//GEN-LAST:event_btnLimparActionPerformed

    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmLivros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnListar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cmbGenero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblLivros;
    private javax.swing.JTextField txtAutor;
    private javax.swing.JTextField txtEditora;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
}
